<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
    <title>Shopping Cart</title>
    <style>
        body {
            background-color: #fdf2c9;
            font-family: Arial, sans-serif;
            color: #333;
            padding-top: 100px;
        }


        .header-align {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }


        .cart-title {
            font-size: 36px;
            margin-bottom: 20px;
            font-weight: bold;
            color: #4a4a4a;
        }


        .continue-shopping a {
            font-size: 16px;
            color: #007bff;
            text-decoration: underline;
            transition: color 0.3s, font-weight 0.3s;
        }

        .continue-shopping a:hover {
            font-weight: bold;
            color: #0056b3;
            text-decoration: none;
        }


        .table {
            margin-top: 20px;
            border: 1px solid #ddd;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .table th {
            background-color: #f8f9fa;
            font-size: 16px;
            color: #555;
            text-align: center;
            border-bottom: 2px solid #ccc;

        }

        .table td {
            font-size: 14px;
            color: #666;
            text-align: center;
        }

        /* .table img {
            max-width: 60px;
            height: auto;
            display: block;
            margin: 0 auto;
            border: 1px solid #ddd;
            border-radius: 5px;
            transition: transform 0.3s;
        }

        .table img:hover {
            transform: scale(1.1);
        } */

        .table img {
            max-width: 60px;
            /* Maximum width for the image */
            height: 60px;
            /* Set a consistent height */
            object-fit: contain;
            /* Ensures the image maintains its aspect ratio within the bounding box */
            display: block;
            margin: 0 auto;
            border: 1px solid #ddd;
            border-radius: 5px;
            transition: transform 0.3s;
        }

        .table img:hover {
            transform: scale(1.1);
        }


        .table input[type="number"] {
            width: 70px;
            padding: 5px;
            text-align: center;
            border: 1px solid #ddd;
            border-radius: 5px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }


        .btn-primary {
            background-color: #007bff;
            border: none;
            padding: 5px 15px;
            border-radius: 5px;
            color: white;
            font-weight: bold;
            transition: background-color 0.3s, transform 0.3s;
        }

        .btn-primary:hover {
            background-color: #0056b3;
            transform: scale(1.05);
        }

        .btn-checkout {
            background-color: #28a745;
            color: #fff;
            border: none;
            padding: 10px 20px;
            width: auto;
            font-size: 16px;
            border-radius: 5px;
            font-weight: bold;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            transition: background-color 0.3s, transform 0.3s;
            margin-bottom: 10rem;
            /* Add space at the bottom */
        }

        .btn-checkout:hover {
            background-color: #218838;
            transform: scale(1.05);
        }

        .btn-delete {
            background: transparent;
            border: none;
            color: #dc3545;
            font-size: 16px;
            transition: color 0.3s, transform 0.3s;
        }

        .btn-delete:hover {
            color: #a71d2a;
            transform: scale(1.1);
        }


        .checkout {
            margin-top: 30px;
            text-align: right;
            font-size: 16px;
        }

        .checkout strong {
            font-size: 18px;
            color: #000;
        }


        @media (max-width: 768px) {
            .cart-title {
                font-size: 28px;
            }

            .table img {
                max-width: 40px;
            }

            .table th,
            .table td {
                font-size: 12px;
            }

            .btn-checkout {
                font-size: 14px;
                padding: 8px 15px;
            }
        }
    </style>
</head>


<body>
    <%- include('partials/navbar.ejs') %>

        <div class="container cart-container">
            <% if (products.length> 0) { %>
                <div class="header-align">
                    <div class="cart-title">Your Shopping Cart</div>
                    <div class="continue-shopping"><a href="/homepage">Continue Shopping</a></div>
                </div>

                <table class="table table-striped align-middle">
                    <thead class="table-light text-center">
                        <tr>
                            <th class="text-start">No.</th>
                            <th class="text-start">Image</th>
                            <th>Product Name </th>
                            <th>Price Per Unit </th>
                            <th>Quantity</th>
                            <th>Delete</th>
                            <th>Total (SGD)</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% let totalPrice=0; %>
                            <% products.forEach((product, index)=> {
                                let productTotal = product.productPrice * product.cartProductQuantity;
                                totalPrice += productTotal; %>
                                <tr>
                                    <td>
                                        <%= index + 1 %>
                                    </td>
                                    <td><img src="/uploads/<%= product.productImage %>" alt="<%= product.productName %>"
                                            style="width: 50px;"></td>
                                    <td class="text-center">
                                        <%= product.productName %>
                                    </td>
                                    <td class="text-center">$<%= product.productPrice %>
                                    </td>
                                    <!-- <td class="product-price" data-base-price="<%= product.productPrice %>">
                                    $<%= product.productPrice %>
                                </td> -->
                                    <td class="text-center">
                                        <form
                                            action="<%= user ? `/product/${product.cartId}/update` : `/product/${product.productId}/update` %>"
                                            method="POST" class="d-flex align-items-center justify-content-center">
                                            <input type="number" class="form-control me-2" id="quantity"
                                                value="<%= product.cartProductQuantity %>" name="quantity" min="1">
                                            <button type="submit" class="btn btn-primary btn-sm">Update</button>
                                        </form>
                                    </td>
                                    <td class="text-center">
                                        <a href="<%= user ? `/product/${product.cartId}/delete` : `/product/${product.productId}/delete` %>"
                                            onclick="return confirm('Are you sure you want to remove this product?')"
                                            class="btn btn-sm">
                                            <i class="far fa-trash-alt fa-lg"></i>
                                        </a>

                                    </td>
                                    <td class="text-center">$<%= productTotal.toFixed(2) %>
                                    </td>
                                </tr>
                                <% }); %>
                    </tbody>
                </table>

                <section class="checkout">
                    <div>
                        <strong>Total Payable:</strong> $<%= totalPrice.toFixed(2) %> SGD
                    </div>
                    <div>Taxes, discounts, and shipping calculated at checkout.</div>
                    <div class="mt-3">
                        <form action="/success" method="GET">
                            <button type="button" id="secure-checkout" class="btn btn-checkout">
                                Secure Checkout
                            </button>
                        </form>
                    </div>
                </section>

                <% } else { %>
                    <div class="text-center">
                        <img src="/uploads/cart.png" alt="Empty Cart" style="width: 150px; margin-bottom: 20px;">
                        <h2>Your cart is empty</h2>
                        <p>Add items into your shopping cart and they will appear here.</p>
                        <a href="/homepage" class="btn btn-primary">Start Shopping</a>
                    </div>
                    <% } %>
        </div>

        <%- include('partials/footer') %>

            <script src="https://js.stripe.com/v3/"></script>


            <script id="products-data" type="application/json"><%- JSON.stringify(products || []) %></script>


            <!-- <script>
        document.getElementById('secure-checkout').addEventListener('click', async () => {
            try {
                
                const products = JSON.parse(document.getElementById('products-data').textContent);

               
                const response = await fetch('/create-checkout-session', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ products }),
                });

                if (!response.ok) throw new Error('Failed to create checkout session');

                const { sessionId } = await response.json();
                const stripe = Stripe('pk_test_51QaL7GJ0WDYVigF0vcTYgyA7Tg9A5OP8W12yNA8C5nXBWN8wi4PXadKinKdp5uomH0zCRqDRaoEZrTAmgYeZw0140019ED9ocj');
                stripe.redirectToCheckout({ sessionId });
            } catch (error) {
                console.error('Error during checkout:', error);
                alert('Unable to proceed to checkout. Please try again later.');
            }
        });

    </script>
    <script>
        document.getElementById('secure-checkout').addEventListener('click', () => {
            try {
                // Inject the user data properly as a boolean string
                const isLoggedIn = '<%= user ? "true" : "false" %>';
    
                if (isLoggedIn === 'false') {
                    // Redirect non-logged-in users to the login page
                    window.location.href = '/login';
                    return;
                }
    
                // Logic for logged-in users (e.g., proceed to secure checkout)
                console.log('User is logged in, proceeding to checkout...');
            } catch (error) {
                console.error('Error during secure checkout logic:', error);
            }
        });
    </script> -->
            <!-- <script>
                document.getElementById('secure-checkout').addEventListener('click', async () => {
                    try {
                        // Inject the user data properly as a boolean string
                        const isLoggedIn = '<%= user ? "true" : "false" %>';

                        if (isLoggedIn === 'false') {
                            // Redirect non-logged-in users to the login page
                            window.location.href = '/login';
                            return;
                        }

                        // Logic for logged-in users (e.g., proceed to secure checkout)
                        console.log('User is logged in, proceeding to checkout...');

                        // Fetch products from the page
                        const products = JSON.parse(document.getElementById('products-data').textContent);

                        // Create a checkout session
                        const response = await fetch('/create-checkout-session', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ products }),
                        });

                        if (!response.ok) throw new Error('Failed to create checkout session');

                        const { sessionId } = await response.json();
                        const stripe = Stripe('pk_test_51QaL7GJ0WDYVigF0vcTYgyA7Tg9A5OP8W12yNA8C5nXBWN8wi4PXadKinKdp5uomH0zCRqDRaoEZrTAmgYeZw0140019ED9ocj');
                        stripe.redirectToCheckout({ sessionId });
                    } catch (error) {
                        console.error('Error during checkout:', error);
                        alert('Unable to proceed to checkout. Please try again later.');
                    }
                });
            </script> -->
            <script>
                document.addEventListener('DOMContentLoaded', () => {
                    const checkoutButton = document.getElementById('secure-checkout');
            
                    if (!checkoutButton) return;
            
                    checkoutButton.addEventListener('click', async () => {
                        try {
                            // Ensure the Stripe library is loaded
                            if (typeof Stripe === 'undefined') {
                                throw new Error('Stripe.js failed to load.');
                            }
            
                            // Inject the user data properly as a boolean string
                            const isLoggedIn = '<%= user ? "true" : "false" %>';
            
                            if (!isLoggedIn) {
                                // Redirect non-logged-in users to the login page
                                window.location.href = '/login';
                                return;
                            }
            
                            // Proceed with checkout for logged-in users
                            console.log('User is logged in, proceeding to checkout...');
            
                            // Fetch products from the page
                            const productsElement = document.getElementById('products-data');
                            if (!productsElement) {
                                throw new Error('Products data not found on the page.');
                            }
            
                            const products = JSON.parse(productsElement.textContent);
            
                            // Create a checkout session
                            const response = await fetch('/create-checkout-session', {
                                method: 'POST',
                                headers: { 'Content-Type': 'application/json' },
                                body: JSON.stringify({ products }),
                            });
            
                            if (!response.ok) {
                                throw new Error('Failed to create checkout session.');
                            }
            
                            const { sessionId } = await response.json();
                            const stripe = Stripe('pk_test_51QaL7GJ0WDYVigF0vcTYgyA7Tg9A5OP8W12yNA8C5nXBWN8wi4PXadKinKdp5uomH0zCRqDRaoEZrTAmgYeZw0140019ED9ocj');
            
                            // Redirect user to Stripe Checkout
                            const result = await stripe.redirectToCheckout({ sessionId });
            
                            if (result.error) {
                                throw new Error(result.error.message);
                            }
                        } catch (error) {
                            console.error('Error during checkout:', error);
                            alert(error.message || 'Unable to proceed to checkout. Please try again later.');
                        }
                    });
                });
            </script>
            
            <script src="/js/logout.js"></script>

            

</body>

</html>